let courses = [
    {
        id: 0,
        name: "Основы Python",
        level: "начинающий",
        rating: 4.6,
        description: "Отличное введение в мир программирования для тех, кто только начинает свой путь в этой области. Python - мощный инструмент с простым и понятным синтаксисом, и этот курс поможет вам освоить его базовые концепции и возможности. Независимо от вашего уровня подготовки, вы сможете легко усвоить материал благодаря понятным объяснениям и практическим заданиям. После завершения курса вы будете готовы к более продвинутым темам и проектам в области программирования на Python.",
        user_quantity: 57,
        reviews: "",
        blocks: 3,
        tasks_count: 12,
        exams: 2,
        persentage: 55,
        solvedtasks: 11,
        tasks: [
            {
                id: 1,
                condition: "Напишите программу, которая выводит на экран 'Hello, World!'",
                input: "Отсутствует",
                output: "Hello, World!",
                status: 0,
                title: "Вывод текста в Python",
                help_text: `Прежде чем мы приступим к решению задания, давайте рассмотрим, как можно вывести текст на экран в языке программирования Python.

                Функция print()

                Python предоставляет нам функцию print(), которая используется для вывода данных на экран. Эта функция позволяет нам выводить текстовые строки, числа, переменные и многое другое.
                
                Пример использования функции print() для вывода текстовой строки:
                
                print("Hello, World!")

                Этот код приведет к выводу на экран строки "Hello, World!". Попробуйте выполнить этот код в интерпретаторе Python, и вы увидите результат в консоли.`,
                
            },
            {
                id: 2,
                condition: "Напишите программу, которая считает сумму чисел от 1 до 100",
                input: "Отсутствует",
                output: "5050",
                status: 0,
                title: "Сумма чисел от 1 до 100",
                help_text: `Прежде чем мы приступим к решению задания, давайте рассмотрим, как можно вычислить сумму чисел от 1 до 100 в языке программирования Python.

                Цикл for
                
                В Python мы можем использовать цикл for для прохода по последовательности чисел. С помощью этого цикла мы можем просуммировать числа от 1 до 100.`,
            },
            {
                id: 3,
                condition: "Напишите программу, которая находит среднее арифметическое двух чисел",
                input: "2 3",
                output: "2.5",
                status: 0,
                title: "Среднее арифметическое двух чисел",
                help_text: `Прежде чем мы приступим к решению задания, давайте рассмотрим, как можно найти среднее арифметическое двух чисел в языке программирования Python.

                Операторы и функции для вычисления среднего:
                
                В Python мы можем использовать арифметические операторы и функции для вычисления среднего арифметического. Например, для нахождения суммы двух чисел и их деления на количество чисел используется оператор сложения (+) и деления (/).`,
            },
            {
                id: 4,
                condition: "Напишите программу, которая определяет, является ли число четным или нечетным",
                input: "7",
                output: "Нечетное",
                status: 0,
                title: "Определение чётности числа",
                help_text: `Прежде чем мы приступим к решению задания, давайте рассмотрим, как можно определить, является ли число четным или нечетным в языке программирования Python.

                Операторы и функции для определения четности:
                
                В Python мы можем использовать арифметические операторы и функции для определения четности числа. Например, для определения остатка от деления числа на 2 используется оператор остатка от деления (%).`,
            },
            {
                id: 5,
                condition: "Напишите программу, которая находит корень квадратный из числа",
                input: "16",
                output: "4",
                status: 0,
                title: "Квадратный корень из числа",
                help_text: `Прежде чем мы приступим к решению задания, давайте рассмотрим, как можно вычислить квадратный корень числа в языке программирования Python.

                Вычисление квадратного корня:
                
                В Python мы можем использовать функцию sqrt() из модуля math, которая позволяет нам вычислить квадратный корень числа. Эта функция принимает один аргумент - число, из которого нужно извлечь корень.`,
            },
            {
                id: 6,
                condition: "Напишите программу, которая находит наибольший общий делитель двух чисел",
                input: "12 18",
                output: "6",
                status: 0,
                title: "Наибольший делитель",
                help_text: `Прежде чем мы приступим к решению задания, давайте рассмотрим, как можно найти наибольший общий делитель двух чисел в языке программирования Python.

                Нахождение НОД:
                
                В Python мы можем использовать функцию gcd() из модуля math, которая позволяет нам найти наибольший общий делитель двух чисел. Эта функция принимает два аргумента - числа, для которых нужно найти НОД.`,
            },
            {
                id: 7,
                condition: "Напишите программу, которая проверяет, является ли строка палиндромом",
                input: "radar",
                output: "Палиндром",
                status: 0,
                title: "Палиндромы",
                help_text: `Прежде чем мы приступим к решению задания, давайте рассмотрим, как можно проверить строку на палиндром в языке программирования Python.

                Операторы и функции для проверки на палиндром:
                
                В Python для проверки строки на палиндром можно использовать операторы сравнения (например, ==) и функции работы со строками (например, методы lower() для преобразования строки к нижнему регистру и replace() для удаления пробелов). Для сравнения строки с ее обратной версией можно использовать срезы строк.`,
            },
            {
                id: 8,
                condition: "Напишите программу, которая проверяет, является ли число простым",
                input: "13",
                output: "Простое",
                status: 0,
                title: "Простые числа",
                help_text: `Прежде чем приступить к решению этого задания, давайте рассмотрим, как можно определить, является ли число простым в программировании.

                Операторы и функции:
                
                Для проверки, является ли число простым, можно использовать циклы и условные операторы.
                Один из подходов - проверка деления числа на все числа в диапазоне от 2 до квадратного корня из числа.
                
                Функции, которые могут быть полезны: оператор деления (%), циклы (например, цикл for), условные операторы (например, if).`,
            },
            {
                id: 9,
                condition: "Напишите программу, которая сортирует список чисел в порядке возрастания",
                input: "5 1 4 2 3",
                output: "1 2 3 4 5",
                status: 0,
                title: "Сортировка чисел",
                help_text: `Прежде чем приступить к решению этого задания, давайте рассмотрим, как можно отсортировать список чисел в порядке возрастания в программировании.

                Операторы и функции:
                
                Для сортировки списка чисел можно использовать встроенные функции или алгоритмы сортировки, такие как сортировка пузырьком, сортировка вставками или сортировка выбором.
                
                Функции, которые могут быть полезны: функция сортировки списка (например, sort()), операторы сравнения (например, >, <).`,
            },
            {
                id: 10,
                condition: "Напишите программу, которая находит факториал числа",
                input: "5",
                output: "120",
                status: 0,
                title: "Факториал числа",
                help_text: `Прежде чем приступить к решению этого задания, давайте рассмотрим, как можно найти факториал числа в программировании.

                Операторы и функции:
                
                Факториал числа - это произведение всех положительных целых чисел от 1 до самого числа.
                Для нахождения факториала числа можно использовать циклы и операции умножения.
                
                Функции, которые могут быть полезны: оператор умножения (*), циклы (например, цикл for).`,
            }
        ]
    }
];


const updateUserCourses = (updatedCourses) => {
    courses = updatedCourses;
};

export { courses as UserCourses, updateUserCourses };
